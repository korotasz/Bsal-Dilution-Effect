{
    "type": [
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "> ",
        "print(deu_revised_all)",
        "\u001B[38;5;246m# A tibble: 737 × 8\u001B[39m\n\u001B[38;5;246m# Groups:   decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal [722]\u001B[39m\n   decimalLatitude decimalLongitude date      species                BsalDetected fatal individualCount     n\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[3",
        "9m\u001B[23m           \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris FALSE        FALSE 3                   1\n\u001B[38;5;250m 2\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris TRUE         FALSE 2                   1\n\u001B[38;5;250m 3\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris FALSE        FALSE 5                   1\n\u001B[38;5;250m 4\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris ",
        "TRUE         FALSE 9                   1\n\u001B[38;5;250m 5\u001B[39m 48.037102       10.363108        2022-6-15 Lissotriton vulgaris   TRUE         FALSE 1                   1\n\u001B[38;5;250m 6\u001B[39m 48.039402       10.392443        2021-5-5  Ichthyosaura alpestris TRUE         FALSE 6                   1\n\u001B[38;5;250m 7\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris FALSE        FALSE 2                   1\n\u001B[38;5;250m 8\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris TRUE    ",
        "     FALSE 3                   1\n\u001B[38;5;250m 9\u001B[39m 48.046454       10.349215        2021-4-29 Lissotriton vulgaris   TRUE         FALSE 2                   1\n\u001B[38;5;250m10\u001B[39m 48.058604       10.32255         2021-4-20 Ichthyosaura alpestris TRUE         FALSE 6                   1\n\u001B[38;5;246m# ℹ 727 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "# Compare ALL usable cases (\"OK\", \"potentialDataError\", & NA) to old data",
        "> ",
        "deu_revised_all <- deu_revised %>%",
        "+ ",
        "  mutate(decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  filter(occurrenceRemarks != \"dataMissing\") %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal) %>%",
        "+ ",
        "  summarise(n = n())",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected'. You can override using\nthe `.groups` argument.\u001B[39m\n",
        "> ",
        "print(deu_revised_all)",
        "\u001B[38;5;246m# A tibble: 722 × 7\u001B[39m\n\u001B[38;5;246m# Groups:   decimalLatitude, decimalLongitude, date, species, BsalDetected [715]\u001B[39m\n   decimalLatitude decimalLongitude date      species                BsalDetected fatal     n\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[",
        "39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris FALSE        FALSE     1\n\u001B[38;5;250m 2\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris TRUE         FALSE     1\n\u001B[38;5;250m 3\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris FALSE        FALSE     1\n\u001B[38;5;250m 4\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris TRUE         FALSE     1\n\u001B[38;5;250m 5\u001B[39m 48.037102       10.363108        2022-6-15 Lissotriton vulgaris   TR",
        "UE         FALSE     1\n\u001B[38;5;250m 6\u001B[39m 48.039402       10.392443        2021-5-5  Ichthyosaura alpestris TRUE         FALSE     1\n\u001B[38;5;250m 7\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris FALSE        FALSE     1\n\u001B[38;5;250m 8\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris TRUE         FALSE     1\n\u001B[38;5;250m 9\u001B[39m 48.046454       10.349215        2021-4-29 Lissotriton vulgaris   TRUE         FALSE     1\n\u001B[38;5;250m10\u001B[39m 48.058604       10.32255      ",
        "   2021-4-20 Ichthyosaura alpestris TRUE         FALSE     1\n\u001B[38;5;246m# ℹ 712 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "# Compare ALL usable cases (\"OK\", \"potentialDataError\", & NA) to old data",
        "> ",
        "deu_revised_all <- deu_revised %>%",
        "+ ",
        "  mutate(decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  filter(occurrenceRemarks != \"dataMissing\") %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "print(deu_revised_all)",
        "\u001B[38;5;246m# A tibble: 737 × 7\u001B[39m\n\u001B[38;5;246m# Groups:   decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal [722]\u001B[39m\n   decimalLatitude decimalLongitude date      species                BsalDetected fatal individualCount\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23",
        "m          \n\u001B[38;5;250m 1\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris FALSE        FALSE 3              \n\u001B[38;5;250m 2\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris TRUE         FALSE 2              \n\u001B[38;5;250m 3\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris FALSE        FALSE 5              \n\u001B[38;5;250m 4\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris TRUE         FALSE 9              \n\u001B[38;5;250m 5\u001B[39m 4",
        "8.037102       10.363108        2022-6-15 Lissotriton vulgaris   TRUE         FALSE 1              \n\u001B[38;5;250m 6\u001B[39m 48.039402       10.392443        2021-5-5  Ichthyosaura alpestris TRUE         FALSE 6              \n\u001B[38;5;250m 7\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris FALSE        FALSE 2              \n\u001B[38;5;250m 8\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris TRUE         FALSE 3              \n\u001B[38;5;250m 9\u001B[39m 48.046454       10.349215        ",
        "2021-4-29 Lissotriton vulgaris   TRUE         FALSE 2              \n\u001B[38;5;250m10\u001B[39m 48.058604       10.32255         2021-4-20 Ichthyosaura alpestris TRUE         FALSE 6              \n\u001B[38;5;246m# ℹ 727 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "# Compare ALL usable cases (\"OK\", \"potentialDataError\", & NA) to old data",
        "> ",
        "deu_revised_all <- deu_revised %>%",
        "+ ",
        "  mutate(decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  filter(occurrenceRemarks != \"dataMissing\") %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise() %>% ",
        "+ ",
        "  distinct()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "print(deu_revised_all)",
        "\u001B[38;5;246m# A tibble: 737 × 7\u001B[39m\n\u001B[38;5;246m# Groups:   decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal [722]\u001B[39m\n   decimalLatitude decimalLongitude date      species                BsalDetected fatal individualCount\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23",
        "m          \n\u001B[38;5;250m 1\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris FALSE        FALSE 3              \n\u001B[38;5;250m 2\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris TRUE         FALSE 2              \n\u001B[38;5;250m 3\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris FALSE        FALSE 5              \n\u001B[38;5;250m 4\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris TRUE         FALSE 9              \n\u001B[38;5;250m 5\u001B[39m 4",
        "8.037102       10.363108        2022-6-15 Lissotriton vulgaris   TRUE         FALSE 1              \n\u001B[38;5;250m 6\u001B[39m 48.039402       10.392443        2021-5-5  Ichthyosaura alpestris TRUE         FALSE 6              \n\u001B[38;5;250m 7\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris FALSE        FALSE 2              \n\u001B[38;5;250m 8\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris TRUE         FALSE 3              \n\u001B[38;5;250m 9\u001B[39m 48.046454       10.349215        ",
        "2021-4-29 Lissotriton vulgaris   TRUE         FALSE 2              \n\u001B[38;5;250m10\u001B[39m 48.058604       10.32255         2021-4-20 Ichthyosaura alpestris TRUE         FALSE 6              \n\u001B[38;5;246m# ℹ 727 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "# Compare ALL usable cases (\"OK\", \"potentialDataError\", & NA) to old data",
        "> ",
        "deu_revised_all <- deu_revised %>%",
        "+ ",
        "  mutate(decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  filter(occurrenceRemarks != \"dataMissing\") %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  # summarise() %>% ",
        "+ ",
        "  distinct()",
        "> ",
        "print(deu_revised_all)",
        "\u001B[38;5;246m# A tibble: 737 × 7\u001B[39m\n\u001B[38;5;246m# Groups:   decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount [737]\u001B[39m\n   decimalLatitude decimalLongitude date      species                BsalDetected fatal individualCount\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;2",
        "46m<chr>\u001B[39m\u001B[23m          \n\u001B[38;5;250m 1\u001B[39m 49.864623       10.488179        2020-6-10 Salamandra salamandra  FALSE        FALSE 1              \n\u001B[38;5;250m 2\u001B[39m 49.864623       10.488179        2020-6-28 Salamandra salamandra  FALSE        FALSE 1              \n\u001B[38;5;250m 3\u001B[39m 49.864623       10.488179        2020-6-14 Salamandra salamandra  FALSE        FALSE 1              \n\u001B[38;5;250m 4\u001B[39m 49.864623       10.488179        2020-6-14 Lissotriton vulgaris   FALSE        FALSE 1              \n\u001B[3",
        "8;5;250m 5\u001B[39m 49.864623       10.488179        2020-6-26 Salamandra salamandra  FALSE        FALSE 1              \n\u001B[38;5;250m 6\u001B[39m 49.864623       10.488179        2020-7-1  Ichthyosaura alpestris FALSE        FALSE 1              \n\u001B[38;5;250m 7\u001B[39m 49.864623       10.488179        2020-6-15 Salamandra salamandra  FALSE        FALSE 1              \n\u001B[38;5;250m 8\u001B[39m 49.864623       10.488179        2020-6-25 Salamandra salamandra  FALSE        FALSE 1              \n\u001B[38;5;250m 9\u001B[39m 49.864623       ",
        "10.488179        2020-6-28 Triturus cristatus     FALSE        FALSE 1              \n\u001B[38;5;250m10\u001B[39m 49.864623       10.488179        2020-6-28 Lissotriton vulgaris   FALSE        FALSE 1              \n\u001B[38;5;246m# ℹ 727 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "View(deu_revised)",
        "> ",
        "View(deu_revised_all)",
        "> ",
        "# Compare ALL usable cases (\"OK\", \"potentialDataError\", & NA) to old data",
        "> ",
        "deu_revised_all <- deu_revised %>%",
        "+ ",
        "  mutate(decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  filter(occurrenceRemarks != \"dataMissing\") %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "deu_all <- germany %>%",
        "+ ",
        "  subset(., select = c(yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                  TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ individualCount),",
        "+ ",
        "         # Convert lat/lon to characters to retain precision",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "Error in (function (cond)  : \n  error in evaluating the argument 'x' in selecting a method for function 'subset': \u001B[38;5;252m\u001B[36mℹ\u001B[38;5;252m In argument: `locality = trimws(locality)`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'locality' not found\n",
        "> ",
        "deu_all <- germany %>%",
        "+ ",
        "  subset(., select = c(yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  # trim white space around genus and species names",
        "+ ",
        "  mutate(genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                  TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ individualCount),",
        "+ ",
        "         # Convert lat/lon to characters to retain precision",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "View(deu_all)",
        "> ",
        "all_diff <- anti_join(deu_all, deu_revised_all)",
        "\u001B[38;5;252mJoining with `by = join_by(decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount)`\u001B[39m\n\u001B[1m\u001B[33mError\u001B[39m in `anti_join()`:\u001B[22m\n\u001B[38;5;252m\u001B[33m!\u001B[38;5;252m Can't join `x$BsalDetected` with `y$BsalDetected` due to incompatible types.\n\u001B[36mℹ\u001B[38;5;252m `x$BsalDetected` is a <logical>.\n\u001B[36mℹ\u001B[38;5;252m `y$BsalDetected` is a <character>.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "## Compare new germany data to old germany data --------------------------------",
        "> ",
        "deu_revised <- germanyv2 %>%",
        "+ ",
        "  mutate(occurrenceRemarks = as.factor(occurrenceRemarks)) %>%",
        "+ ",
        "  subset(., select = c(occurrenceRemarks, locality, yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "         # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude),",
        "+ ",
        "         BsalDetected = as.logical(BsalDetected),",
        "+ ",
        "         fatal = as.logical(fatal),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ individualCount),",
        "+ ",
        "         occurrenceRemarks = case_when(occurrenceRemarks == \"1\" ~ \"OK\",",
        "+ ",
        "                                       occurrenceRemarks == \"2\" ~ \"potentialDataError\",",
        "+ ",
        "                                       occurrenceRemarks == \"3\" ~ \"dataMissing\",",
        "+ ",
        "                                       TRUE ~ occurrenceRemarks)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE)",
        "> ",
        "## Compare new germany data to old germany data --------------------------------",
        "> ",
        "deu_revised <- germanyv2 %>%",
        "+ ",
        "  mutate(occurrenceRemarks = as.factor(occurrenceRemarks)) %>%",
        "+ ",
        "  subset(., select = c(occurrenceRemarks, locality, yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "         # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude),",
        "+ ",
        "         BsalDetected = as.logical(BsalDetected),",
        "+ ",
        "         fatal = as.logical(fatal),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ individualCount),",
        "+ ",
        "         occurrenceRemarks = case_when(occurrenceRemarks == \"1\" ~ \"OK\",",
        "+ ",
        "                                       occurrenceRemarks == \"2\" ~ \"potentialDataError\",",
        "+ ",
        "                                       occurrenceRemarks == \"3\" ~ \"dataMissing\",",
        "+ ",
        "                                       TRUE ~ occurrenceRemarks)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE)",
        "> ",
        "head(deu_revised)",
        "  occurrenceRemarks         locality       date decimalLatitude decimalLongitude               species BsalDetected fatal\n1              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n2              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n3              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n4              <NA>  Rei",
        "chertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n5              <NA>  Mattheiser Wald   2016-5-3       49.719908         6.652989    Triturus cristatus        FALSE FALSE\n6              <NA> Sirzenicher Bach   2014-8-1       49.763169         6.611662 Salamandra salamandra        FALSE FALSE\n  individualCount\n1               1\n2               1\n3               1\n4               1\n5               1\n6               1\n",
        "> ",
        "# Compare ALL usable cases (\"OK\", \"potentialDataError\", & NA) to old data",
        "> ",
        "deu_revised_all <- deu_revised %>%",
        "+ ",
        "  filter(occurrenceRemarks != \"dataMissing\") %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "print(deu_revised_all)",
        "\u001B[38;5;246m# A tibble: 737 × 7\u001B[39m\n\u001B[38;5;246m# Groups:   decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal [722]\u001B[39m\n   decimalLatitude decimalLongitude date      species                BsalDetected fatal individualCount\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<lgl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<lgl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23",
        "m          \n\u001B[38;5;250m 1\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris FALSE        FALSE 3              \n\u001B[38;5;250m 2\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris TRUE         FALSE 2              \n\u001B[38;5;250m 3\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris FALSE        FALSE 5              \n\u001B[38;5;250m 4\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris TRUE         FALSE 9              \n\u001B[38;5;250m 5\u001B[39m 4",
        "8.037102       10.363108        2022-6-15 Lissotriton vulgaris   TRUE         FALSE 1              \n\u001B[38;5;250m 6\u001B[39m 48.039402       10.392443        2021-5-5  Ichthyosaura alpestris TRUE         FALSE 6              \n\u001B[38;5;250m 7\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris FALSE        FALSE 2              \n\u001B[38;5;250m 8\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris TRUE         FALSE 3              \n\u001B[38;5;250m 9\u001B[39m 48.046454       10.349215        ",
        "2021-4-29 Lissotriton vulgaris   TRUE         FALSE 2              \n\u001B[38;5;250m10\u001B[39m 48.058604       10.32255         2021-4-20 Ichthyosaura alpestris TRUE         FALSE 6              \n\u001B[38;5;246m# ℹ 727 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "deu_all <- germany %>%",
        "+ ",
        "  subset(., select = c(yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  # trim white space around genus and species names",
        "+ ",
        "  mutate(genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                  TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ individualCount),",
        "+ ",
        "         # Convert lat/lon to characters to retain precision",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "all_diff <- anti_join(deu_all, deu_revised_all)",
        "\u001B[38;5;252mJoining with `by = join_by(decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount)`\u001B[39m\n\u001B[1m\u001B[33mError\u001B[39m in `anti_join()`:\u001B[22m\n\u001B[38;5;252m\u001B[33m!\u001B[38;5;252m Can't join `x$individualCount` with `y$individualCount` due to incompatible types.\n\u001B[36mℹ\u001B[38;5;252m `x$individualCount` is a <integer>.\n\u001B[36mℹ\u001B[38;5;252m `y$individualCount` is a <character>.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.",
        "\u001B[39m\n",
        "> ",
        "deu_all <- germany %>%",
        "+ ",
        "  subset(., select = c(yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  # trim white space around genus and species names",
        "+ ",
        "  mutate(genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                  TRUE ~ dayCollected),",
        "+ ",
        "         # Convert lat/lon to characters to retain precision",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "all_diff <- anti_join(deu_all, deu_revised_all)",
        "\u001B[38;5;252mJoining with `by = join_by(decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount)`\u001B[39m\n\u001B[1m\u001B[33mError\u001B[39m in `anti_join()`:\u001B[22m\n\u001B[38;5;252m\u001B[33m!\u001B[38;5;252m Can't join `x$individualCount` with `y$individualCount` due to incompatible types.\n\u001B[36mℹ\u001B[38;5;252m `x$individualCount` is a <integer>.\n\u001B[36mℹ\u001B[38;5;252m `y$individualCount` is a <character>.\u001B[39m\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.",
        "\u001B[39m\n",
        "> ",
        "## Compare new germany data to old germany data --------------------------------",
        "> ",
        "deu_revised <- germanyv2 %>%",
        "+ ",
        "  mutate(occurrenceRemarks = as.factor(occurrenceRemarks)) %>%",
        "+ ",
        "  subset(., select = c(occurrenceRemarks, locality, yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "         # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude),",
        "+ ",
        "         BsalDetected = as.logical(BsalDetected),",
        "+ ",
        "         fatal = as.logical(fatal),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ as.integer(individualCount)),",
        "+ ",
        "         occurrenceRemarks = case_when(occurrenceRemarks == \"1\" ~ \"OK\",",
        "+ ",
        "                                       occurrenceRemarks == \"2\" ~ \"potentialDataError\",",
        "+ ",
        "                                       occurrenceRemarks == \"3\" ~ \"dataMissing\",",
        "+ ",
        "                                       TRUE ~ occurrenceRemarks)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE)",
        "Warning message:\n\u001B[38;5;252mThere was 1 warning in `mutate()`.\u001B[39m\n\u001B[38;5;252m\u001B[36mℹ\u001B[38;5;252m In argument: `individualCount = case_when(individualCount == \"MISSING\" ~ NA, TRUE ~ as.integer(individualCount))`.\u001B[39m\nCaused by warning:\n\u001B[33m!\u001B[39m NAs introduced by coercion \n",
        "> ",
        "## Compare new germany data to old germany data --------------------------------",
        "> ",
        "deu_revised <- germanyv2 %>%",
        "+ ",
        "  mutate(occurrenceRemarks = as.factor(occurrenceRemarks)) %>%",
        "+ ",
        "  subset(., select = c(occurrenceRemarks, locality, yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "         # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude),",
        "+ ",
        "         BsalDetected = as.logical(BsalDetected),",
        "+ ",
        "         fatal = as.logical(fatal),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ individualCount),",
        "+ ",
        "         occurrenceRemarks = case_when(occurrenceRemarks == \"1\" ~ \"OK\",",
        "+ ",
        "                                       occurrenceRemarks == \"2\" ~ \"potentialDataError\",",
        "+ ",
        "                                       occurrenceRemarks == \"3\" ~ \"dataMissing\",",
        "+ ",
        "                                       TRUE ~ occurrenceRemarks)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE)",
        "> ",
        "head(deu_revised)",
        "  occurrenceRemarks         locality       date decimalLatitude decimalLongitude               species BsalDetected fatal\n1              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n2              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n3              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n4              <NA>  Rei",
        "chertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n5              <NA>  Mattheiser Wald   2016-5-3       49.719908         6.652989    Triturus cristatus        FALSE FALSE\n6              <NA> Sirzenicher Bach   2014-8-1       49.763169         6.611662 Salamandra salamandra        FALSE FALSE\n  individualCount\n1               1\n2               1\n3               1\n4               1\n5               1\n6               1\n",
        "> ",
        "## Compare new germany data to old germany data --------------------------------",
        "> ",
        "deu_revised <- germanyv2 %>%",
        "+ ",
        "  mutate(occurrenceRemarks = as.factor(occurrenceRemarks)) %>%",
        "+ ",
        "  subset(., select = c(occurrenceRemarks, locality, yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "         # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude),",
        "+ ",
        "         BsalDetected = as.logical(BsalDetected),",
        "+ ",
        "         fatal = as.logical(fatal),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ individualCount),",
        "+ ",
        "         occurrenceRemarks = case_when(occurrenceRemarks == \"1\" ~ \"OK\",",
        "+ ",
        "                                       occurrenceRemarks == \"2\" ~ \"potentialDataError\",",
        "+ ",
        "                                       occurrenceRemarks == \"3\" ~ \"dataMissing\",",
        "+ ",
        "                                       TRUE ~ occurrenceRemarks)) %>%",
        "+ ",
        "  mutate(individualCount = as.numeric(indivdualCount)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE)",
        "\u001B[1m\u001B[33mError\u001B[39m in `mutate()`:\u001B[22m\n\u001B[38;5;252m\u001B[36mℹ\u001B[38;5;252m In argument: `individualCount = as.numeric(indivdualCount)`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'indivdualCount' not found\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "## Compare new germany data to old germany data --------------------------------",
        "> ",
        "deu_revised <- germanyv2 %>%",
        "+ ",
        "  mutate(occurrenceRemarks = as.factor(occurrenceRemarks)) %>%",
        "+ ",
        "  subset(., select = c(occurrenceRemarks, locality, yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "         # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude),",
        "+ ",
        "         BsalDetected = as.logical(BsalDetected),",
        "+ ",
        "         fatal = as.logical(fatal),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ dayCollected),",
        "+ ",
        "         individualCount = case_when(individualCount == \"MISSING\" ~ NA,",
        "+ ",
        "                                     TRUE ~ individualCount),",
        "+ ",
        "         occurrenceRemarks = case_when(occurrenceRemarks == \"1\" ~ \"OK\",",
        "+ ",
        "                                       occurrenceRemarks == \"2\" ~ \"potentialDataError\",",
        "+ ",
        "                                       occurrenceRemarks == \"3\" ~ \"dataMissing\",",
        "+ ",
        "                                       TRUE ~ occurrenceRemarks)) %>%",
        "+ ",
        "  mutate(individualCount = as.numeric(individualCount)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE)",
        "> ",
        "head(deu_revised)",
        "  occurrenceRemarks         locality       date decimalLatitude decimalLongitude               species BsalDetected fatal\n1              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n2              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n3              <NA>  Reichertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n4              <NA>  Rei",
        "chertshausen 2018-10-28       49.314267         9.299841 Salamandra salamandra        FALSE FALSE\n5              <NA>  Mattheiser Wald   2016-5-3       49.719908         6.652989    Triturus cristatus        FALSE FALSE\n6              <NA> Sirzenicher Bach   2014-8-1       49.763169         6.611662 Salamandra salamandra        FALSE FALSE\n  individualCount\n1               1\n2               1\n3               1\n4               1\n5               1\n6               1\n",
        "> ",
        "# Compare ALL usable cases (\"OK\", \"potentialDataError\", & NA) to old data",
        "> ",
        "deu_revised_all <- deu_revised %>%",
        "+ ",
        "  filter(occurrenceRemarks != \"dataMissing\") %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "print(deu_revised_all)",
        "\u001B[38;5;246m# A tibble: 737 × 7\u001B[39m\n\u001B[38;5;246m# Groups:   decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal [722]\u001B[39m\n   decimalLatitude decimalLongitude date      species                BsalDetected fatal individualCount\n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m     \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m                  \u001B[3m\u001B[38;5;246m<lgl>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<lgl>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<dbl",
        ">\u001B[39m\u001B[23m\n\u001B[38;5;250m 1\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris FALSE        FALSE               3\n\u001B[38;5;250m 2\u001B[39m 48.018236       10.418253        2022-4-1  Ichthyosaura alpestris TRUE         FALSE               2\n\u001B[38;5;250m 3\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris FALSE        FALSE               5\n\u001B[38;5;250m 4\u001B[39m 48.037102       10.363108        2022-6-15 Ichthyosaura alpestris TRUE         FALSE               9\n\u001B[38;5;250m 5\u001B[39m 4",
        "8.037102       10.363108        2022-6-15 Lissotriton vulgaris   TRUE         FALSE               1\n\u001B[38;5;250m 6\u001B[39m 48.039402       10.392443        2021-5-5  Ichthyosaura alpestris TRUE         FALSE               6\n\u001B[38;5;250m 7\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris FALSE        FALSE               2\n\u001B[38;5;250m 8\u001B[39m 48.046454       10.349215        2021-4-29 Ichthyosaura alpestris TRUE         FALSE               3\n\u001B[38;5;250m 9\u001B[39m 48.046454       10.349215        ",
        "2021-4-29 Lissotriton vulgaris   TRUE         FALSE               2\n\u001B[38;5;250m10\u001B[39m 48.058604       10.32255         2021-4-20 Ichthyosaura alpestris TRUE         FALSE               6\n\u001B[38;5;246m# ℹ 727 more rows\u001B[39m\n\u001B[38;5;246m# ℹ Use `print(n = ...)` to see more rows\u001B[39m\n",
        "> ",
        "deu_all <- germany %>%",
        "+ ",
        "  subset(., select = c(yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  # trim white space around genus and species names",
        "+ ",
        "  mutate(genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                  TRUE ~ dayCollected),",
        "+ ",
        "         # Convert lat/lon to characters to retain precision",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "all_diff <- anti_join(deu_all, deu_revised_all)",
        "\u001B[38;5;252mJoining with `by = join_by(decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount)`\u001B[39m\n",
        "> ",
        "View(all_diff)",
        "> ",
        "?anti_join",
        "> ",
        "?left_join()",
        "> ",
        "all_diff <- full_join(deu_all, deu_revised_all)",
        "\u001B[38;5;252mJoining with `by = join_by(decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount)`\u001B[39m\n",
        "> ",
        "View(all_diff)",
        "> ",
        "View(germany)",
        "> ",
        "# Compare ALL usable cases (\"OK\", \"potentialDataError\", & NA) to old data",
        "> ",
        "deu_revised_all <- deu_revised %>%",
        "+ ",
        "  filter(occurrenceRemarks != \"dataMissing\") %>%",
        "+ ",
        "  subset(., select = c(locality, decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(locality, decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'locality', 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You\ncan override using the `.groups` argument.\u001B[39m\n",
        "> ",
        "deu_all <- germany %>%",
        "+ ",
        "  subset(., select = c(locality, yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                  TRUE ~ dayCollected),",
        "+ ",
        "         # Convert lat/lon to characters to retain precision",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  subset(., select = c(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You can override\nusing the `.groups` argument.\u001B[39m\n",
        "> ",
        "deu_all <- germany %>%",
        "+ ",
        "  subset(., select = c(locality, yearCollected:decimalLongitude, genus:specificEpithet,",
        "+ ",
        "                       monthCollected:dayCollected, BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  # trim white space around genus and species names",
        "+ ",
        "  mutate(locality = trimws(locality),",
        "+ ",
        "         genus = trimws(genus),",
        "+ ",
        "         specificEpithet = trimws(specificEpithet),",
        "+ ",
        "         # replace 'MISSING' in dataset with NA vals",
        "+ ",
        "         monthCollected = case_when(monthCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                    TRUE ~ monthCollected),",
        "+ ",
        "         dayCollected = case_when(dayCollected == \"MISSING\" ~ NA,",
        "+ ",
        "                                  TRUE ~ dayCollected),",
        "+ ",
        "         # Convert lat/lon to characters to retain precision",
        "+ ",
        "         decimalLatitude = as.character(decimalLatitude),",
        "+ ",
        "         decimalLongitude = as.character(decimalLongitude)) %>%",
        "+ ",
        "  # combine date columns into a single 'date' column",
        "+ ",
        "  unite(., col = \"date\", c(\"yearCollected\", \"monthCollected\", \"dayCollected\"),",
        "+ ",
        "        sep = \"-\", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  # combine genus & specificEpithet columns into single 'species' column",
        "+ ",
        "  unite(., col = \"species\", c(\"genus\", \"specificEpithet\"),",
        "+ ",
        "        sep = \" \", remove = TRUE, na.rm = TRUE) %>%",
        "+ ",
        "  subset(., select = c(locality, decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "                       BsalDetected, fatal, individualCount)) %>%",
        "+ ",
        "  group_by(locality, decimalLatitude, decimalLongitude, date, species,",
        "+ ",
        "           BsalDetected, fatal, individualCount) %>%",
        "+ ",
        "  summarise()",
        "\u001B[38;5;252m`summarise()` has grouped output by 'locality', 'decimalLatitude', 'decimalLongitude', 'date', 'species', 'BsalDetected', 'fatal'. You\ncan override using the `.groups` argument.\u001B[39m\n",
        "> ",
        "all_diff <- full_join(deu_all, deu_revised_all)",
        "\u001B[38;5;252mJoining with `by = join_by(locality, decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount)`\u001B[39m\n",
        "> ",
        "all_diff <- anti_join(deu_all, deu_revised_all)",
        "\u001B[38;5;252mJoining with `by = join_by(locality, decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount)`\u001B[39m\n",
        "> ",
        "all_diff2 <- anti_join(deu_revised_all, deu_all)",
        "\u001B[38;5;252mJoining with `by = join_by(locality, decimalLatitude, decimalLongitude, date, species, BsalDetected, fatal, individualCount)`\u001B[39m\n",
        "> ",
        "View(all_diff2)",
        "> ",
        "View(all_diff)",
        "\nRestarting R session...\n\n"
    ]
}