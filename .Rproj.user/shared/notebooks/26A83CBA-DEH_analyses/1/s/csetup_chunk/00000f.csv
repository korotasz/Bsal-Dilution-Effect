"0","#| echo: false"
"0","#| output: false"
"0",""
"0","## Set working directory "
"0","knitr::opts_knit$set(root.dir = dirname(""C:/Users/alexi/Development/Chapter-2-Analyses/markdownFiles""))"
"0",""
"0","## Load packages that will be used throughout -- others will be loaded and unloaded througout the document"
"0","library(pacman)"
"0","library(extrafontdb)"
"0","library(extrafont) "
"0","extrafont::loadfonts(device = ""all"", quiet = T) # plot fonts "
"0","## Packages --------------------------------------------------------------------"
"0","### > Visualization Packages----------------------------------------------------"
"0","pckgs <- c(""ggsignif"", # adds labels to significant groups"
"0","             ""ggpubr"", # stat_compare_means()"
"0","            ""ggbreak"", # create axis breaks in ggplots"
"0","             ""gtools"", # signif. value styling"
"0","             ""ggtext"", # for text type/arrangements w/ ggplot2"
"0","           ""Rttf2pt1"", # to use with the extrafont package"
"0","           ""ggthemes"", # contains 'scales', 'themes', and 'geoms' packages"
"0","          ""grDevices"", # saves high quality svg, pdf, and ps files"
"0","           ""graphics"", # dependency of grDevices"
"0","            ""cowplot"", # arranging plots/figs"
"0","          ""gridExtra"", # arranging plots/figs"
"0","          ""patchwork"", # arranging plots/figs"
"0","         ""hrbrthemes"", # plot colors"
"0","       ""RColorBrewer"", # plot colors"
"0","            ""viridis"", # plot colors"
"0","           ""eurostat"", # obtain spatial data from europe"
"0","            ""geodata"", # obtain geographic data (world map)"
"0","      ""rnaturalearth"", # obtain spatial polygons that can be used with sf"
"0","                 ""sf"", # mapping"
"0","          ""ggspatial"", # north arrow and scale bar"
"0","            ""mapproj"", # apply map projection"
"0","       ""multcompView"", # cld.emmGrid()"
"0","             ""sjPlot"", # plot_model(), tab_model()"
"0","           #     ""ragg"", # converts plots to tiff files"
"0","           # ""webshot2"", # converts html files to png"
"0","           #   ""magick"", # image_read() -- needed for cowplot::draw_image"
"0","              ""Hmisc"", # binconf() provides CI of binomial distribution"
"0","### > Markdown Packages --------------------------------------------------------"
"0","          ""htmltools"", # visualizes model outputs as html tables"
"0","          ""latex2exp"", # allows use of LaTeX in R"
"0","               ""glue"", # allows concatenation of LaTeX and R syntax"
"0","           # ""ggiraphExtra"", # make an interactive plot"
"0","         ""kableExtra"", # table styling"
"0","### > Analysis Packages --------------------------------------------------------"
"0","          ""tidyverse"", # data wrangling/manipulation"
"0","            ""glmmTMB"", # glmmTMB()"
"0","           ""multcomp"", # glht()"
"0","            ""emmeans"", # lsmeans()"
"0","                ""car"", # Anova()"
"0","             ""DHARMa"", # simulateResiduals(), testZeroInflation(), testDispersion()"
"0","              ""MuMIn"", # model.sel()"
"0","          ""ggeffects"", # ggpredict()"
"0","               ""epiR"", # calculate prevalence & CIs"
"0","              ""binom"", # credible intervals"
"0","             ""sjmisc""  # data and variable transformation"
"0",")"
"0",""
"0","## Load packages"
"0","pacman::p_load(pckgs, character.only = T)"
"0",""
"0","## Functions -------------------------------------------------------------------"
"0","map_bounds <- function(x1, x2, y1, y2, crs){"
"0","  df <- data.frame(Lon = c(x1, x2),"
"0","                   Lat = c(y1, y2)) %>%"
"0","    st_as_sf(., coords = c(""Lon"", ""Lat""), crs = 4326) %>%"
"0","    st_transform(., crs)"
"0",""
"0","  out_df <- data.frame(x1 = sf::st_coordinates(df)[1,1],"
"0","                       x2 = sf::st_coordinates(df)[2,1],"
"0","                       y1 = sf::st_coordinates(df)[1,2],"
"0","                       y2 = sf::st_coordinates(df)[2,2])"
"0","  return(out_df)"
"0",""
"0","}"
"0",""
"0","flip <- function(data) {"
"0","  new <- data[rev(rownames(data)), ]"
"0","  rownames(new) <- NULL"
"0","  new"
"0","}"
"0",""
"0","## Read in .csv files and prep data --------------------------------------------"
"0","## All data -- not meant for analyses, just visualization."
"0","d <- read.csv(""BsalData_all.csv"", header = T, encoding = ""UTF-8"") %>%"
"0","  filter(continent == ""Europe"") %>% "
"0","  # transform vars"
"0","  mutate(logsppAbun = log(sppAbun + 1),"
"0","         logsiteAbun = log(siteAbun + 1),"
"0","         scientific = as.factor(scientific),"
"0","         susceptibility = as.factor(susceptibility)) %>%"
"0","  relocate(c(logsppAbun, logsiteAbun), .after = sppAbun)"
"0",""
"0",""
"0","## 'dcbind' dataset is what will be used to run our models"
"0","dcbind_all <- read.csv(""Bsal_cbind_all.csv"", header = T, encoding = ""UTF-8"") %>%"
"0","  filter(continent == ""Europe"") %>% "
"0","  # transform vars"
"0","  mutate(logsppAbun = log(sppAbun + 1),"
"0","         logsiteAbun = log(siteAbun + 1),"
"0","         scientific = as.factor(scientific),"
"0","         susceptibility = as.factor(susceptibility)) %>%"
"0","  relocate(c(logsppAbun, logsiteAbun), .after = sppAbun)"
"0",""
"0","dcbind_scaled <- dcbind_all %>% "
"0","  ## Data prep for cbind models: drop rows with NA vals in weather data & scale relevant vars"
"0","  #   bio1_wc = ""annual mean temperature"" | bio12_wc = annual precipitation"
"0","  tidyr::drop_na(., any_of(c(""temp_d"", ""sMoist_d"", ""tmin_wc:bio1_wc"", ""bio12_wc""))) %>%"
"0","  mutate_at(c(""temp_d"", ""sMoist_d"","
"0","              ""bio1_wc"", ""bio12_wc"", ""tavg_wc"", ""prec_wc""),"
"0","            ~(scale(., center = T, scale = T %>% as.numeric))) %>%"
"0","  mutate(year = year(date),"
"0","         locality = case_when(is.na(locality) ~ ADM2,"
"0","                              TRUE ~ locality))"
"0",""
"0",""
"0","## Define general ggplot theme for plot uniformity -----------------------------"
"0","ak_theme <- theme_ipsum(base_family = ""Segoe UI Light"") +"
"0","  theme(axis.text.x = element_text(size = 26),"
"0","        axis.title.x = element_text(size = 34, hjust = 0.5,"
"0","                                    margin = margin(t = 10, r = 0, b = 0, l = 0),"
"0","                                    face = ""plain""),"
"0","        axis.text.y = element_text(size = 26, face = ""italic""),"
"0","        axis.title.y = element_text(size = 34, hjust = 0.5,"
"0","                                    margin = margin(t = 0, r = 15, b = 0, l = 5),"
"0","                                    face = ""plain""),"
"0","        axis.ticks.length = unit(.25, ""cm""),"
"0","        axis.ticks = element_blank(),"
"0","        plot.tag = element_text(size = 36, face = ""bold""),"
"0","        plot.title = element_text(size = 42, hjust = 0.5, face = ""plain""),"
"0","        plot.subtitle = element_markdown(size = 12, face = ""plain""),"
"0","        # plot.margin = margin(1, 1, 1.5, 1.2, ""cm""),"
"0","        plot.caption = element_markdown(hjust = 1, size = 14, face = ""plain""),"
"0","        plot.caption.position = ""plot"","
"0","        legend.position = ""top"","
"0","        legend.key.size = unit(2,""cm""),"
"0","        legend.text = element_text(size = 28, hjust = -1),"
"0","        legend.title = element_text(size = 28, face = ""bold""),"
"0","        panel.border = element_blank(),"
"0","        panel.background = element_blank(),"
"0","        panel.spacing.y = unit(1.5,""cm""),"
"0","        strip.text = element_text(size = 14, face = ""bold"", hjust = 0.5),"
"0","        axis.line = element_line(color = 'black'))"
"0",""
"0",""
"0",""
"0",""
"0","## Clean labels for model output in a table ------------------------------------"
"0","nicelabs <- c(`(Intercept)` = ""Intercept"","
"0","              richness = ""Relative richness"","
"0","              iucn_rich = ""Richness estimate (IUCN)"","
"0","              locality_rich = ""Richness estimate (local species pool)"","
"0","              logsppAbun = ""log(Species abundance)"","
"0","              logsiteAbun = ""log(Site abundance)"","
"0","              ""richness:logsiteAbun"" = ""Richness:log(Site abundance)"","
"0","              temp_d = ""Temperature"","
"0","              soilM_d = ""Soil moisture"","
"0","              ""temp_d:sMoist_d"" = ""Temp:Soil moisture"")"
"0",""
